1. 这个工程主要是用来总结一些计算机相关的特定技术内容，生成完整的知识文档，包括基础知识，基本原理，源码内容，面试题等领域
2. 尽量使用markdown风格生成
2. 注意结构层次合理，内容覆盖全面，简繁得当，重点内容突出，简单内容概括就好
3. 段落布局要科学，生成内容前查看文档是否已有相关段落，在原有段落上进行扩充，而不是重复生成相近、重复的段落
4. 修改是直接在原有文档上修改，而不是生成建议让自己进行修改
5. 为了便于了解，可以生成时序图，流程图等，但不要生成太多，以免影响阅读
6. 更改文档只能扩充，丰富，润色，合并，调整，重新组织原有内容，而不是删除原有部分或全部内容
7. 对重要知识点，难以理解的点，复杂知识点，高频面试题等，可以着重讲解，最好配上流程图等便于理解
8. 补充内容要有关联，发散，对比，总结，以及使用上有哪些注意的问题，以及使用场景等
9. 展现形式要丰富，比如表格，流程图等，不要只有文字
10. 知识点讲解要详略得当，重难点着重讲，简单知识概括讲
11. 介绍内容面向高频面试题，以及高频面试题的解题思路，解题方法，解题技巧等
12. 一个标题一个知识点或者一个板块，让补充或者更新的时候，不要再起一个标题，叫更多内容，高级内容等相似的标题，要基于原来的标题下进行扩充，融合，而不是重新起一个标题
13. 确保文档结构更加清晰，内容更加完整，每个知识点都有详细的说明和示例
14. 新增、修改标题要同步更新目录
15. 所有文档都有编号，生成新的文档就创建一个编号，不要重复
16. 如果我要新增某个知识点，但是没有指定更新哪个文档，要自动判断所属的文档，在对应文档上进行更新，补充，如果不属于任何现有的文档，则创建一个新的文档
17. 如果我们只是进行对话，我去了解某个知识，那么你要将对话过程涉及的知识点更新到对应的文档、对应的标题下。如果已经有有关内容了，则进行融合，更新，如果没有直接生成新的
18. 标题要准确，简洁，突出重点，让人一看就知道是哪方面的内容，以便用来创建大脑的索引，方便搜索
19. 重点文字要加粗，突出重点，让人一看就知道是重点
20. 介绍一个技术要把关键信息讲清楚，比如都有哪些组成，各个组件实现的功能，实现原理，有什么巧妙的地方，有什么注意的问题，使用场景等
21. 讲解要由浅到深，文档架构布局合理，内容全面，知识点覆盖全面，不要遗漏
22. 标题要罗列全面，重点标题详细讲，基础的少讲，点到就行
23. 源码讲解要清晰，简明，突出重点，讲清楚流程，让人一下看得懂，添加必要的流程图
24. 总之目的是要建立一个技术的整体知识框架，查漏补缺，掌握全貌，方便后续的查询和使用
25. 列出的源码要添加足够的注释，讲清楚要干什么
26. 要添加技术在业务上的使用经验总结，以及报错排查、修复手段，以及优化手段
27. 先生成目录，再完善内容
28. 贴出的源码要有流程图，便于直观理解处理过程
29. 将小段落的标题改为小标题，而不是使用加粗显示。
30. mermaid流程图的名称如果有特殊字符,要用双引号包裹起来,要不然无法正确渲染
31. 注意代码快对齐,有没有没对齐的情况影响渲染
32. 针对名词、术语,要先讲清楚是什么,然后可以使用表格,流程图等进行更清楚的解释
33. 面试题的回答内容要有完整的文字描述,以问答的形式,详略得当,层次清晰,重点加粗,可以直接作为标准答案
34. 面试题的每一个问题要添加编号,还要对问题进行分类,便于定位
35. 面试题的问答都要有代表性、深度、广度、难度,能显示出来高级程序员的水平